% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processing.R
\name{automatedfiltering}
\alias{automatedfiltering}
\title{Basic SC Pipeline for QC and clustering}
\usage{
automatedfiltering(
  seuratobject,
  baselinefilter.mad,
  baseline.mito.filter,
  madmax.dist.percentmito.baseline,
  baseline.libsize.filter,
  madmax.dist.nCount_RNA.baseline,
  removemitomaxclust,
  iterativefilter,
  iterativefilter.libsize,
  iterativefilter.mito
)
}
\arguments{
\item{seuratobject}{A Seurat object}

\item{baselinefilter.mad}{T/F; whether to perform "global" QC, ie without pre-clustering. Default = False.}

\item{baseline.mito.filter}{T/F; whether to perform global maximum mitochondrial content filtration using median absolute deviation threshold; will only work if baselinefilter.mad is set to True. Default is True.}

\item{madmax.dist.percentmito.baseline}{a numeric, or a string reading 'predict'. If numeric is provided, will use this as median absolute deviation threshold for global mito cutoff. If set to 'predict', will attempt to learn cutoff from data. Default = 'predict'}

\item{baseline.libsize.filter}{T/F; whether to perform global minimal lib size filtration using median absolute deviation threshold; will only work if baselinefilter.mad is set to True. Default is True.}

\item{madmax.dist.nCount_RNA.baseline}{a numeric, or a string reading 'predict'. If numeric is provided, will use this as median absolute deviation threshold for global libsize cutoff. If set to 'predict', will attempt to learn cutoff from data. Default = 'predict'}

\item{removemitomaxclust}{T/F ; whether to identify and remove abnormally high mitochondrial content clusters after first-pass clustering; if no baseline mito filtration is used, there will almost certainly be a mito-driven cluster. Identification is via Grubbs' test for outliers, based on Lukasz Komsta's implementation in the outliers package. Default is True.}

\item{iterativefilter}{T/F ; whether to perform iterative filtering on first-pass filtering. Default is True.}

\item{iterativefilter.libsize}{either one of two strings ('twosided' or 'lefttail') or False. Twosided will attempt to learn median abs. dev. cutoffs for both min and max to catch debris and, ostensibly, doublets. Lefttail will attempt to learn median abs. dev. threshold for min to catch debris; doublets may not accurately be captured by max cutoffs as this is more an artifact of sequencing than cell suspension. False will skip. Default is 'lefttail'.}

\item{iterativefilter.mito}{T/F; whether to learn right-tail median abs. dev. thresholds and filter maximal mitochondrial content from each cluster. May incorrectly remove mito-okay cells while missing true mito-hi cells. Default = F.}
}
\value{

}
\description{
Given a Seurat object, perform QC filtering. This is best to do on an object that has not undergone other QC/filtering.
}
